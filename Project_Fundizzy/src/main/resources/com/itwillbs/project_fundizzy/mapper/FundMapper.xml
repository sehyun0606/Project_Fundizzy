<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwillbs.project_fundizzy.mapper.FundMapper">
<!--   펀딩 리스트 출력 -->
	<select id="selectFundList" resultType="map">
		SELECT *
		FROM project_story ps
		JOIN project_list pl ON ps.project_title = pl.project_title
		WHERE approved_date IS NOT NULL
	</select>
<!--   프로젝트 보드 출력 -->
	<select id="selectFundBoard" resultType="map">
		SELECT pi.project_code,
		pi.category,
		pi.sub_category,
		pi.adult_check,
		pi.target_amount,
		ps.project_title,
		ps.project_content,
		pd.project_start_date,
		pd.project_end_date
		FROM project_info pi 
		JOIN project_date pd ON pi.project_code = pd.project_code
		JOIN project_story ps ON pd.project_code = ps.project_code
		WHERE ps.project_code = #{ps.project_code};
	</select>
<!--   	지지서명 조회 후 목록 출력 -->
  	<select id="selectSupportList" resultType="map">
  		SELECT
		s.support_num, 
	    s.support_content, 
	    s.support_tag, 
	    s.support_date,
	    s.email,   
  		p.project_code,
  		m.maker_email
  		FROM support s
  		JOIN project_list p ON p.project_code = s.project_code
  		JOIN maker_info m ON m.project_code = s.project_code
  	</select>
  	
<!--   	지지서명 등록  -->
	<insert id="insertSupportSignature">
		<selectKey keyProperty="support_num" resultType="int" order="BEFORE">
		    SELECT IFNULL(MAX(support_num), 0)
		    FROM support
		</selectKey>
	 	INSERT INTO support(
	 		support_num,
	 		project_code,
	 		email,
	 		support_content,
	 		support_tag,
	 		support_date
	 	)VALUES(
	 		#{support_num} + 1,
	 		#{project_code},
	 		#{email},
	 		#{supportContent},
	 		#{supportKeyword},
	 		NOW()
	 	)
	</insert>
	
<!-- 	지지서명 댓글 등록 -->
	<insert id="insertSupportReply">
		<selectKey  keyProperty="reply_num" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(reply_num),0)
			FROM reply
		</selectKey>
		INSERT INTO reply
		VALUES(
				#{reply_num} + 1,
			    #{project_code},              
			    #{maker_email} ,         
			    #{reply_content}, 
			    NOW() , 
			    #{support_num},
			    #{reply_writer_ip},    
			    0 
		)
	</insert>
<!-- 	지지서명 댓글 목록 출력 -->
	<select id="selectReplyList" resultType="map">
		SELECT reply_content, maker_email, reply_date
		FROM reply
		WHERE project_code = "83652PRO01";
	</select>
<!-- 	지지서명 댓글 삭제 -->
	<delete id="deleteSupportReply">
		DELETE
		FROM reply
		WHERE 
	</delete>
<!-- 	지지서명 댓글 작성자 출력 -->
<!-- 어짜피 댓글 작성자는 프로젝트코드 판매자 한명이라서 프로젝트 코드로 조건 걸었음 -->
	<select id="selectReplyWriter" resultType="map">
		SELECT reply_writer
		FROM reply
		WHERE project_code  = "83652PRO01";
	</select>
  
  
  
<!--   오른쪽 부분  -->
<!-- 	리워드 정보 가져오기 -->
	<select id="selectPaymentReward" resultType="map">
		SELECT *
		FROM reward
		WHERE reward_code = 1;
	</select>
<!--   배송을 위한 맴버 정보 가져오기 -->
  	<select id="selectPaymentPayMember">
  		SELECT *
  		FROM member
  		WHERE email = #{email}
  	</select>
  
<!--   페이로 결제한 내역 계산  -->
	<insert id="insertPaymentPay">
		INSERT INTO fundizzy_pay(
			email
			,pay_amt
			,pay_type
			,pay_date
			,pay_tran_id
			,pay_balance
		)
		VALUES(
			#{email}
			,#{payment_price}
			,'PA'
			,NOW()
			,#{pay_tran_id}
			,#{result_balance}
		) 
	</insert>
  
<!--   	<update id="updateBalancePay"> -->
<!--   		UPDATE fundizzy_pay -->
<!--   		SET pay_balance = #{result_balance} -->
<!--   		WHERE email = #{email} -->
<!--   	</update> -->


  	<!--   	결제내역 payment 테이블 insert -->
	<insert id="insertPayment">
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			SELECT IFNULL(MAX(idx),0)
			FROM payment
		</selectKey>
		INSERT INTO payment(
			idx
			,common_code
			,payment_code
			,project_code
			,billing_email
			,payment_method
			,payment_amount
			,payment_request_date
			,payment_complete_date
			,participation_status
	
		) VALUES (
			#{idx} + 1 
			,"PAY01"
			,#{payment_code}
			,#{project_code}
			,#{email}
			,"PAY01"
			,#{payment_price}
			,NOW()
			,NOW()
			,"PAR02"
		)
	</insert>
	<!-- 	배송내역 insert -->
	<insert id="insertShipment">
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			SELECT IFNULL(MAX(idx),0)
			FROM shipment
		</selectKey>
		INSERT INTO shipment(
			idx
			,common_code
			,project_code
			,payment_code
			,supporter_email
			,name
			,phone_num
			,address
			,address1
			,post_code
			,delivery_req
			,new_name
			,new_phone_num
			,new_address
			,new_address1
			,extra_address
			,new_post_code
			
		)VALUES (
			#{idx} + 1
			,"SHI01"
			,#{project_code}
			,#{payment_code}
			,#{email}
			,#{name}
			,#{phone_num}
			,#{address}
			,#{address1}
			,#{post_code}
			,#{delivery_req}
			,#{new_name}
			,#{new_phone_num}
			,#{new_address}
			,#{new_address1}
			,#{extra_address}
			,#{new_post_code}
		
		)
	</insert>
	
<!--   	펀딩내역 insert -->
  	<insert id="insertFundHistory">
  		<selectKey keyProperty="fund_idx" order="BEFORE" resultType="int">
  			SELECT IFNULL(MAX(fund_idx),0)
			FROM fund_history
  		</selectKey>
  		INSERT INTO fund_history
  		(
  			fund_idx
  			,project_code
  			,member_email
  			,project_title
  			,representative_picture
  			,product_name
  			,business_name
  			,result_point
  			,send_stat
  			,refund_stat
  			,reward_code
  			,purchase_date
  			,product_count
  			,payment_code
  		)VALUES(
  			#{fund_idx} + 1
  			,#{project_code} 
  			,#{email}
  			,#{project_title} 
  			,#{representative_picture} 
  			,#{product_name}
  			,"N"
  			,#{payment_price} 
  			,"SHI01"
  			,"N" 
  			,#{reward_code} 
  			,NOW() 
  			,#{total_count} 
  			,#{payment_code} 
  		)
  	</insert>

	


  </mapper>