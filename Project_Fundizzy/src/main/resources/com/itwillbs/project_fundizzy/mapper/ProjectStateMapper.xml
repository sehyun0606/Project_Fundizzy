<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.project_fundizzy.mapper.ProjectStateMapper">
	<insert id="insertNewsBoard">
		<selectKey keyProperty="news_code" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(news_code), 0)
			FROM news
		</selectKey>
		INSERT 
		INTO news
		VALUES (
			#{news_code} + 1
			, #{project_code}
			, #{maker_email}
			, #{news_title}
			, #{news_content}
			, NOW()
			, 'Y'
		)
	</insert>
	
	<select id="selectNewsList" resultType="news">
		SELECT *
		FROM news
		WHERE 
			project_code = #{project_code}
			AND news_status = 'Y'
		ORDER BY news_date DESC
		LIMIT
			#{startRow}
			, #{listLimit}
	</select>
	
	<select id="selectNewsListCount" resultType="int">
		SELECT COUNT(*)
		FROM news
		WHERE 
			project_code = #{project_code}
			AND news_status = 'Y'
	</select>
	
	<select id="getNews" resultType="news">
		SELECT *
		FROM news
		WHERE news_code = #{news_code}
	</select>
	
	<update id="deleteNews">
		UPDATE news
		SET news_status = 'D'
		WHERE news_code = #{news_code}
	</update>

	<update id="updateNewsBoard">
		UPDATE news
		SET news_title = #{news_title}
			, news_content = #{news_content}
		WHERE news_code = #{news_code}
	</update>

	<select id="selectPaymentCountList" resultType="map">
		SELECT
		    DATE(payment_complete_date) AS date,
		    COUNT(*) AS daily_payments,  -- 해당 날짜의 결제 건수
		    SUM(COUNT(*)) OVER (ORDER BY DATE(payment_complete_date)) AS cumulative_payments -- 누적 건수
		FROM payment
		WHERE project_code = #{project_code}
		GROUP BY DATE(payment_complete_date)
		ORDER BY DATE(payment_complete_date)
	</select>
	
	<select id="selectDailyPaymentList" resultType="map">
		SELECT 
		    DATE(payment_complete_date) AS date,
		    SUM(payment_amount) AS cumulative_payments
		FROM payment
		WHERE project_code = #{project_code}
		GROUP BY DATE(payment_complete_date)
		ORDER BY DATE(payment_complete_date);
	</select>
	
	<select id="selectCumulativePaymentList" resultType="map">
		SELECT 
		    DATE(payment_complete_date) AS date,
		    SUM(SUM(payment_amount)) OVER (ORDER BY DATE(payment_complete_date)) AS cumulative_payments
		FROM payment
		WHERE project_code = #{project_code}
		GROUP BY DATE(payment_complete_date)
		ORDER BY DATE(payment_complete_date)
	</select>

</mapper>













