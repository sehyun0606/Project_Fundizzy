<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwillbs.project_fundizzy.mapper.FundMapper">
  
<!--   펀딩 리스트 출력 -->
	<select id="selectFundList" resultType="map">
		SELECT *
		FROM project_story ps
		JOIN project_list pl ON ps.project_title = pl.project_title
		WHERE approved_date IS NOT NULL
	</select>
	
<!--   프로젝트 보드 출력 -->
	<select id="selectFundBoard" resultType="map">
		SELECT pi.project_code,
		pi.category,
		pi.sub_category,
		pi.adult_check,
		pi.target_amount,
		ps.project_title,
		ps.project_content,
		pd.project_start_date,
		pd.project_end_date,
		pi.business_name,
		pl.progress
		FROM project_info pi 
		JOIN project_date pd ON pi.project_code = pd.project_code
		JOIN project_story ps ON pd.project_code = ps.project_code
		JOIN project_list pl ON pl.project_code = ps.project_code
		WHERE ps.project_code = #{ps.project_code};
	</select>
	
<!-- 	프로젝트 board 출력 - 리워드 테이블 가져오기  -->
	<select id="selectReward" resultType="map">
		SELECT *
		FROM reward 
		WHERE project_code = #{project_code}
	</select>
	
<!-- 	프로젝트 board 출력 - 찜 테이블 가져오기  -->
	<select id="selectKeep" resultType="map">
		SELECT *
		FROM keep 
		WHERE project_code = #{project_code}
	</select>
	
<!-- 	찜 등록 -->
	<insert id="insertKeep">
		INSERT INTO keep
		VALUES(
			#{project_code}
			 ,#{email}
		)
	</insert>
	
<!-- 	찜 삭제 -->
	<delete id="deleteKeep">
		DELETE FROM keep
		WHERE email = #{email}
		AND project_code = #{project_code}
	</delete>
	
<!-- 	새소식 목록 출력 -->
 	<select id="selectNews" resultType="map">
		SELECT *
		FROM news
		WHERE project_code = #{project_code}
	</select>
	
<!--   	지지서명 조회 후 목록 출력 -->
  	<select id="selectSupportList" resultType="map">
  		SELECT
		support_num, 
	    support_content, 
	    support_tag, 
	    support_date,
	    email,   
  		project_code
  		FROM support 
  		WHERE project_code = #{project_code}
  	</select>
  	
<!--   	지지서명 등록  -->
	<insert id="insertSupportSignature">
		<selectKey keyProperty="support_num" resultType="int" order="BEFORE">
		    SELECT IFNULL(MAX(support_num), 0)
		    FROM support
		</selectKey>
	 	INSERT INTO support(
	 		support_num,
	 		project_code,
	 		email,
	 		support_content,
	 		support_tag,
	 		support_date
	 	)VALUES(
	 		#{support_num} + 1,
	 		#{project_code},
	 		#{email},
	 		#{supportContent},
	 		#{supportKeyword},
	 		NOW()
	 	)
	</insert>
	
<!-- 	지지서명 댓글 등록 -->
	<insert id="insertSupportReply">
		<selectKey  keyProperty="reply_num" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(reply_num),0)
			FROM reply
		</selectKey>
		INSERT INTO reply
		VALUES(
				#{reply_num} + 1,
			    #{project_code},              
			    #{maker_email} ,         
			    #{reply_content}, 
			    NOW() , 
			    #{support_num},
			    #{reply_writer_ip},    
			    0 
		)
	</insert>
	
<!-- 	지지서명 댓글 목록 출력 -->
	<select id="selectReplyList" resultType="map">
		SELECT reply_content, maker_email, reply_date
		FROM reply
		WHERE project_code = "83652PRO01";
	</select>
	
<!-- 	지지서명 댓글 삭제 -->
	<delete id="deleteSupportReply">
		DELETE
		FROM reply
		WHERE 
	</delete>
	
<!-- 	지지서명 댓글 작성자 출력 -->
<!-- 어짜피 댓글 작성자는 프로젝트코드 판매자 한명이라서 프로젝트 코드로 조건 걸었음 -->
	<select id="selectReplyWriter" resultType="map">
		SELECT reply_writer
		FROM reply
		WHERE project_code  = "83652PRO01";
	</select>
  
<!--   펀딩 내역 테이블 가져오기 -->
	<select id="selectFundHistory" resultType="map">
		SELECT *
		FROM fund_history
		WHERE project_code = #{project_code}
		ORDER BY purchase_date DESC
	</select>
  
<!--   오른쪽 부분  -->
<!-- 	리워드 정보 가져오기 -->
	<select id="selectPaymentReward" resultType="map">
		SELECT *
		FROM reward
		WHERE project_code = #{project_code}
		ORDER BY reward_code
	</select>
<!-- 	선택한 리워드 정보 가져오기 -->
	<select id="selectPaymentSelectedReward" parameterType="map" resultType="reward">
	    SELECT * 
	    FROM reward
	    WHERE project_code = #{project_code}
	    AND reward_code = #{reward_code}
	    ORDER BY reward_code
	</select>

<!--   배송을 위한 맴버 정보 가져오기 -->
  	<select id="selectPaymentPayMember">
  		SELECT *
  		FROM member
  		WHERE email = #{email}
  	</select>
  
<!--   페이로 결제한 내역 계산  -->
	<insert id="insertPaymentPay">
		<selectKey keyProperty="pay_balance" order="BEFORE" resultType="int">
			SELECT pay_balance
			from fundizzy_pay
			WHERE email = #{email}
			ORDER BY pay_date DESC
			limit 1	
		</selectKey>
		INSERT INTO fundizzy_pay(
			email
			,pay_amt
			,pay_type
			,pay_date
			,pay_tran_id
			,pay_balance
		)VALUES(
			#{email}
			,#{payment_price}
			,'PA'
			,NOW()
			,#{pay_tran_id}
			, #{pay_balance} - #{payment_price}
		) 
	</insert>
  
  	<!--   	결제내역 payment 테이블 insert -->
	<insert id="insertPayment">
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			SELECT IFNULL(MAX(idx),0)
			FROM payment
		</selectKey>
		INSERT INTO payment(
			idx
			, common_code
			, payment_code
			, project_code
			, billing_email
			, payment_method
			, payment_amount
			, payment_request_date
			, payment_complete_date
			, participation_status
		) VALUES (
			#{idx} + 1 
			, #{common_code}
			, CONCAT(#{common_code}, #{idx} + 1)
			, #{project_code}
			, #{email}
			, '계좌결제'
			, #{payment_price}
			, NOW()
			, NOW()
			, "PAR02"
		)
	</insert>
	<!-- 	배송내역 insert -->
	<insert id="insertShipment">
		<selectKey keyProperty="idx" order="BEFORE" resultType="int">
			SELECT IFNULL(MAX(idx),0)
			FROM shipment
		</selectKey>
		INSERT INTO shipment(
			idx
			,common_code
			,project_code
			,payment_code
			,supporter_email
			,name
			,phone_num
			,address
			,address1
			,post_code
			,delivery_req
			,extra_address
		)VALUES (
			#{idx} + 1
			,"SHI01"
			,#{project_code}
			,CONCAT('SHI01', #{idx} + 1)
			,#{email}
			,#{name}
			,#{phone_num}
			,#{address1}
			,#{address2}
			,#{post_code}
			,#{delivery_req}
			,#{extra_address}
		)
	</insert>
	
<!--   	펀딩내역 insert -->
<insert id="insertFundHistory" parameterType="map">
    <selectKey keyProperty="fund_idx" order="BEFORE" resultType="int">
        SELECT IFNULL(MAX(fund_idx), 0) FROM fund_history
    </selectKey>

    <!-- foreach 사용해서 reward_codes 리스트에 있는 모든 리워드 코드에 대해 INSERT -->
    <foreach collection="reward_codes" item="reward_code" index="index" separator=";">
        INSERT INTO fund_history (
            fund_idx, project_code, member_email, project_title, representative_picture, product_name,
            business_name, result_point, send_stat, refund_stat, reward_code, purchase_date, 
            product_count, payment_code
        ) VALUES (
            #{fund_idx} + 1, <!-- fund_idx가 중복되지 않도록 처리 -->
            #{project_code},
            #{email},
            (SELECT project_title FROM project_list WHERE project_code = #{project_code}),
            (SELECT representative_picture FROM project_list WHERE project_code = #{project_code}),
            #{product_name},
            (SELECT business_name FROM project_info WHERE project_code = #{project_code}),
            #{payment_price},
            'SHI01',
            'N',
            #{reward_code},  <!-- 각각의 reward_code 값 삽입 -->
            NOW(),
            #{total_count},
            (SELECT payment_code FROM payment WHERE billing_email = #{email} ORDER BY payment_complete_date DESC LIMIT 1)
        )
    </foreach>
</insert>

<!--   	<insert id="insertFundHistory"> -->
<!--   		<selectKey keyProperty="fund_idx" order="BEFORE" resultType="int"> -->
<!--   			SELECT IFNULL(MAX(fund_idx),0) -->
<!-- 			FROM fund_history -->
<!--   		</selectKey> -->
<!--   		INSERT INTO fund_history -->
<!--   		( -->
<!--   			fund_idx -->
<!--   			,project_code -->
<!--   			,member_email -->
<!--   			,project_title -->
<!--   			,representative_picture -->
<!--   			,product_name -->
<!--   			,business_name -->
<!--   			,result_point -->
<!--   			,send_stat -->
<!--   			,refund_stat -->
<!--   			,reward_code -->
<!--   			,purchase_date -->
<!--   			,product_count -->
<!--   			,payment_code -->
<!--   		)VALUES( -->
<!--   			#{fund_idx} + 1 -->
<!--   			,#{project_code}  -->
<!--   			,#{email} -->
<!--   			, ( -->
<!--   				SELECT project_title -->
<!--   				FROM project_list -->
<!--   				WHERE project_code = #{project_code} -->
<!--   			) -->
<!--   			, ( -->
<!--   				SELECT representative_picture -->
<!--   				FROM project_list -->
<!--   				WHERE project_code = #{project_code} -->
<!--   			) -->
<!--   			,#{product_name} -->
<!--   			,( -->
<!--   				SELECT business_name -->
<!--   				FROM project_info -->
<!--   				WHERE project_code = #{project_code} -->
<!--   			) -->
<!--   			,#{payment_price}  -->
<!--   			,'SHI01' -->
<!--   			,'N' -->
<!--   			,#{reward_code}  -->
<!--   			,NOW()  -->
<!--   			,#{total_count}  -->
<!--   			, ( -->
<!--   				SELECT payment_code -->
<!--   				FROM payment -->
<!--   				WHERE billing_email = #{email} -->
<!--   				ORDER BY payment_complete_date DESC -->
<!--   				limit 1 -->
<!--   			) -->
<!--   		) -->
<!--   	</insert> -->

	


  </mapper>