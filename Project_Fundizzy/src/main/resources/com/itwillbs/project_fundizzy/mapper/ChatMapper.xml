<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.project_fundizzy.mapper.ChatMapper">

	<!-- 채팅방 리스트 조회 -->
	<select id="selectChatRoomList" resultType="chatRoom">
		SELECT 
			c.room_id
			, c.title
			, c.member_email as sender_email
			, (
				SELECT member_email
				FROM chat_room
				WHERE 
					room_id = c.room_id
					AND member_email != #{sender_email}
			) as receiver_email
			, c.status
			, c.last_accessed_time
			, (
				SELECT COUNT(read_state)
		        FROM chat_message
		        WHERE
					room_id = c.room_id
		            AND sender_email != c.member_email
		            AND read_state = 0
			) as unread_count
			, (
				SELECT message
				FROM chat_message
				WHERE 
					room_id = c.room_id
					AND idx = (
										SELECT MAX(idx)
										FROM chat_message
										WHERE room_id = c.room_id
									)
				
			) as last_message
		FROM 
			chat_room c
		WHERE
			c.member_email = #{sender_email}
			AND c.status > 0
		ORDER BY c.last_accessed_time ASC
	</select>
	
	<!-- 최근 채팅한 멤버의 정보 조회 -->
	<select id="selectRecentlyChatMemberList" resultType="map">
		SELECT * 
		FROM member m 
		JOIN chat_room c 
		ON m.email = c.member_email 
		WHERE c.room_id IN (
			SELECT room_id
			FROM ( -- IN 과 LIMIT 동시 사용 불가로 서브쿼리사용
			    SELECT room_id 
			    FROM chat_room 
			    WHERE member_email = #{sender_email}
			    ORDER BY last_accessed_time DESC 
			    LIMIT 5
			) as recently_chat_table
		) 
		AND m.email != #{sender_email}
		ORDER BY c.last_accessed_time DESC;
	</select>
	
	<!-- 나와 연관된 메이커의 정보 조회 -->
	<select id="selectMyMakerInfo" resultType="map">
		SELECT *
		FROM member
		WHERE email IN (
						SELECT 
							DISTINCT(member_email)
						FROM 
							project_list
						WHERE
							project_code IN (  -- 내가 찜한 프로젝트 메이커 조회
												SELECT project_code
												FROM keep
												WHERE email = #{sender_email}
											) 
						OR project_code IN ( -- 내가 참여한 프로젝트 메이커 조회
												SELECT project_code
												FROM payment
												WHERE billing_email = #{sender_email}
												
											)
						OR project_code IN ( -- 내가 지지선언한 프로젝트 메이커 조회
												SELECT project_code
												FROM support
												WHERE email = #{sender_email}
											)
					)
	</select>
	
	<!-- 나의 서포터의 정보 조회 -->
	<select id="selectMySupportInfo" resultType="map">
		SELECT *
		FROM member
		WHERE email IN ( -- 내프로젝트를 지지한 서포터 조회
							SELECT s.email
							FROM 
								project_list p
							JOIN 
								support s
							ON 
								p.project_code = s.project_code
							WHERE
								p.member_email = #{sender_email}
						)
	</select>
	
	<!-- 채팅방 정보 조회 -->
	<select id="selectChatRoom" resultType="chatRoom">
		SELECT
			r1.room_id
			, r1.title
			, r1.member_email AS sender_email
			, r2.member_email AS receiver_email
			, r1.status
			, r1.last_accessed_time
		FROM chat_room r1
		JOIN chat_room r2
			ON r1.room_id = r2.room_id
			AND r1.member_email = #{sender_email}
			AND r2.member_email = #{receiver_email}
	</select>
	
	<!-- 채팅방의 채팅 내역 조회 -->
	<select id="selectChatMessageList" resultType="chatMessage">
		SELECT *
		FROM chat_message
		WHERE room_id = #{room_id}
		ORDER BY send_time ASC;
	</select>
	
	<!-- 채팅시작시 새로운 채팅방 생성 -->
	<insert id="insertNewChatRoom">
		INSERT INTO chat_room
		VALUES (
				#{room_id}
				, CONCAT((	
							SELECT nickname
							FROM member
							where email = #{receiver_email}
							)
							, '님과의 채팅방'
						)
				, #{sender_email}
				, 1
				, now()
			)
			,(
				#{room_id}
				, CONCAT((	
							SELECT nickname
							FROM member
							where email = #{sender_email}
							)
							, '님과의 채팅방'
						)
				, #{receiver_email}
				, 1
				, now()
			)
	</insert>
	
	<!-- 채팅방 마지막 접근 시간 업데이트 -->
	<!-- 내가 보낸 메세지일경우 상대방의 방은 그대로 유지하고 내방만 마지막 접근 시간 변경 -->
	<update id="updateLastAccessTime">
		UPDATE chat_room
		SET last_accessed_time = #{send_time}
		WHERE room_id = #{room_id}
	</update>
	
	<insert id="insertChatMessage">
		INSERT INTO chat_message
		VALUES (
			null
			, #{room_id}
			, #{sender_email}
			, #{receiver_email}
			, #{message}
			, #{type}
			, #{send_time}
			, 0
		)
	</insert>
	
	<!-- 채팅방 입장시 해당 채팅방의 채팅 읽음 처리 -->
	<update id="updateMessageToRead">
		UPDATE chat_message
		SET read_state = 1
		WHERE room_id = #{room_id}
			AND receiver_email = #{sender_email} 
			AND read_state = 0
	</update>
	
	<!-- 내가 읽지않은 메세지의 총 수 조회 -->
	<select id="selectTotalUnReadCount" resultType="int">
		SELECT count(*)
		FROM chat_message
		WHERE receiver_email = #{sender_email}
			AND read_state = 0
	</select>
	
	<!-- 채팅방의 상태 조회 -->
	<select id="selectRoomStatus" resultType="int">
		SELECT status
		FROM chat_room
		WHERE room_id = #{room_id}
			  AND member_email = #{sender_email}
	</select>
	
	<!-- 채팅방의 상태값 변경 -->
	<!-- 내가먼저 나갈경우 나의 채팅방이 status 0으로 변경 -->
	<update id="updateChatRoomstatus">
		UPDATE chat_room
		SET status = 0
		WHERE room_id = #{room_id}
			AND member_email = #{sender_email}
	</update>
	
	<!-- 회원이 먼저 채팅방을 나간경우 상대방의 status 2로 변경 -->
	<update id="updateChatRoomstatus2">
		UPDATE chat_room
		SET status = 2
		WHERE room_id = #{room_id}
			AND member_email = #{receiver_email}
	</update>
	
	<!-- 해당채팅방의 채팅내역 삭제 -->
	<delete id="deleteChatMessage">
		DELETE FROM chat_message
		WHERE room_id = #{room_id}
	</delete>
	
	<!-- 채팅방 삭제 -->
	<delete id="deleteChatRoom">
		DELETE FROM chat_room
		WHERE room_id = #{room_id}
	</delete>
	
	<!-- 채팅방 이름변경 -->
	<update id="updateChatRoomName">
		UPDATE chat_room
		SET title = #{message}
		WHERE room_id = #{room_id}
			AND member_email = #{sender_email}
	</update>
</mapper>